---
const languages = ['English', 'ಕೊಂಕಣಿ'];
const currentLocale = Astro.currentLocale;
const selectedLanguage = currentLocale === 'kok' ? 'ಕೊಂಕಣಿ' : 'English';
---

<div class="relative inline-block  text-left">
  <div>
    <button
      type="button"
      id="lang-button"
      class="inline-flex justify-center w-25 rounded-md border border-gray-300 shadow-sm px-2 py-2 bg-white text-sm font-bold  text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 "
      disabled
    >
      {selectedLanguage}
      <svg
        id="lang-arrow"
        class="-mr-1 h-5 w-5 transition-transform duration-200 ease-in-out"
        xmlns="http://www.w3.org/2000/svg"
        viewBox="0 0 20 20"
        fill="currentColor"
        aria-hidden="true"
      >
        <path
          fill-rule="evenodd"
          d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 011.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z"
          clip-rule="evenodd"
        />
      </svg>
    </button>
  </div>
  <div
    id="lang-dropdown"
    class="opacity-0 invisible transition-all ease-in-out duration-300 origin-top-right absolute -right-2 mt-2  px-2 rounded-md shadow-lg bg-white ring-1 ring-black ring-opacity-5 focus:outline-none"
    role="menu"
    aria-orientation="vertical"
    aria-labelledby="options-menu"
  >
    <div class="py-1" role="none">
      {languages.map((lang) => (
        <button
          type="button"
          class="block px-4 py-2 text-sm text-gray-700 rounded-md hover:bg-natgeo-yellow"
        >
          {lang}
        </button>
      ))}
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', () => {
  const button = document.getElementById('lang-button') as HTMLButtonElement | null;
  const dropdown = document.getElementById('lang-dropdown') as HTMLElement | null;
  const arrow = document.getElementById('lang-arrow') as HTMLElement | null;

  if (!button || !dropdown || !arrow) return;

  window.addEventListener('load', () => {
    button.removeAttribute('disabled');
  });

  const handleLanguageChange = (lang: string): void => {
    button.innerHTML = 'Loading...';
    button.setAttribute('disabled', 'true');

    const currentPath = window.location.pathname;
    const pathWithLocaleStripped = currentPath.replace(/^\/kok\//, '/');
    const localeToSwitchTo = lang === 'ಕೊಂಕಣಿ' ? 'kok' : 'en';
    const newPath = localeToSwitchTo === 'kok'
      ? `/${localeToSwitchTo}${pathWithLocaleStripped}`
      : `${pathWithLocaleStripped}`;

    window.location.href = newPath;
  };

  const toggleDropdown = (): void => {
    const isVisible = dropdown.classList.contains('visible');
    dropdown.classList.toggle('visible', !isVisible);
    dropdown.style.opacity = isVisible ? '0' : '1';
    dropdown.style.visibility = isVisible ? 'hidden' : 'visible';
    arrow.classList.toggle('rotate-180', !isVisible);
  };

  button.addEventListener('click', (e: MouseEvent) => {
    e.stopPropagation();
    toggleDropdown();
  });

  document.addEventListener('click', () => {
    dropdown.classList.remove('visible');
    dropdown.style.opacity = '0';
    dropdown.style.visibility = 'hidden';
    arrow.classList.remove('rotate-180');
  });

  button.addEventListener('mouseenter', () => {
    if (window.innerWidth > 768) {
      dropdown.classList.add('visible');
      dropdown.style.opacity = '1';
      dropdown.style.visibility = 'visible';
      arrow.classList.add('rotate-180');
    }
  });

  dropdown.addEventListener('mouseenter', () => {
    dropdown.classList.add('visible');
    dropdown.style.opacity = '1';
    dropdown.style.visibility = 'visible';
    arrow.classList.add('rotate-180');
  });

  const hideDropdownWithDelay = (): void => {
    if (window.innerWidth > 768) {
      setTimeout(() => {
        if (!dropdown?.matches(':hover')) {
          dropdown.classList.remove('visible');
          dropdown.style.opacity = '0';
          dropdown.style.visibility = 'hidden';
          arrow.classList.remove('rotate-180');
        }
      }, 100);
    }
  };

  button.addEventListener('mouseleave', hideDropdownWithDelay);
  dropdown.addEventListener('mouseleave', hideDropdownWithDelay);

  document.querySelectorAll<HTMLButtonElement>('#lang-dropdown button').forEach((btn) => {
    btn.addEventListener('click', (e: MouseEvent) => {
      const target = e.target as HTMLButtonElement;
      handleLanguageChange(target.innerText);
    });
  });
});
</script>

<style>
  .relative:hover #lang-dropdown {
    opacity: 1;
    visibility: visible;
    transform: translateY(0);
  }

  #lang-dropdown {
    opacity: 0;
    visibility: hidden;
    transition: opacity 0.3s ease-in-out, visibility 0.3s ease-in-out;
  }

  .visible {
    opacity: 1;
    visibility: visible;
  }
  .rotate-180 {
    transform: rotate(180deg);
  }
</style>
