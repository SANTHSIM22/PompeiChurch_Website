---
import { Icon } from 'astro-icon/components';
interface Subtitle {
  commission: string;
  name: string;
}

interface Props {
  convenor: string;
  title: string;
  subtitles?: Subtitle[];
}

const { convenor, title, subtitles } = Astro.props;
const uniqueId = Math.random().toString(36).substring(2, 9);
---

<div class="border border-yellow-600 rounded-md w-full max-w-3xl mx-auto my-10">
  <div class="flex justify-between items-center p-3  rounded-md  bg-yellow-100 cursor-pointer dropdown-toggle" data-dropdown-id={uniqueId}>
    <h3 class="font-semibold text-lg">{title}</h3>
    <Icon
      name="chevron-right";
      class="arrow transform transition-transform w-6 h-6"
    />
  </div>

  <div class="dropdown-content overflow-hidden pl-3 pr-3" data-dropdown-id={uniqueId}>
    <div class="mt-2">
      <p><strong>Convenor:</strong> <span class="text-gray-500">{convenor}</span></p>
    </div>
    <table class="table-auto w-full mt-3 mb-3">
      <thead>
        <tr>
          <th class="text-left font-semibold border-b-2 pb-2">Commission</th>
          <th class="text-left font-semibold border-b-2 pb-2">Name</th>
        </tr>
      </thead>
      <tbody>
        {subtitles?.map((subtitle) => (
          <tr key={subtitle.commission}>
            <td class="py-2"><strong>{subtitle.commission}</strong></td>
            <td class="py-2 text-gray-500">{subtitle.name}</td>
          </tr>
        ))}
      </tbody>
    </table>
  </div>
</div>

<style>
  .dropdown-content {
    max-height: 0;
    opacity: 0;
    transition: max-height 0.5s ease, opacity 0.5s ease;
    overflow: hidden;
  }
  .dropdown-content.open {
    max-height: 1000px;
    opacity: 1;
  }
  .arrow {
    transition: transform 0.3s ease;
    transform: rotate(-90deg);
  }
  .arrow.rotate {
    transform: rotate(90deg);
  }
</style>

<script>
  document.querySelectorAll('.dropdown-toggle').forEach(toggle => {
    toggle.addEventListener('click', function() {
      const dropdownId = this.getAttribute('data-dropdown-id');
      const dropdownContent = document.querySelector(`.dropdown-content[data-dropdown-id="${dropdownId}"]`);
      const arrow = this.querySelector('.arrow');
      const isOpen = dropdownContent.classList.contains('open');

      if (isOpen) {
        dropdownContent.style.maxHeight = dropdownContent.scrollHeight + 'px';
        dropdownContent.offsetHeight;
        dropdownContent.style.maxHeight = '0';
        dropdownContent.classList.remove('open');
        arrow.classList.remove('rotate');
      } else {
        dropdownContent.style.maxHeight = dropdownContent.scrollHeight + 'px';
        dropdownContent.classList.add('open');
        arrow.classList.add('rotate');
      }
    });
  });
</script>

